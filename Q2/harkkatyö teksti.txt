Tehtävässä 2 oli tarkoitus analysoida annettua DTMF signaalia ja kehittää funktio, joka tunnistaisi moisten signaalien numerot automaattisesti. DTMF on signaalijärjestelmä, joka välittää numeroita ja muutamia erilaisia
merkkejä. Sen alkuperäinen tarkoitus oli välittää soittajan painamat numerot eteenpäin. Käytännössä numeroiden välittäminen tapahtuu lähettämällä signaalia kahdella eri taajuudella. Näiden taajuuksien yhdistelmää vastaa jokin uniikki kirjain. Esimerkiksi mikäli signaalia lähetetään taajuuksilla 770 Hz ja 1336 Hz, on kyseessä numero 5. Tehtävänannossa oli mainittu, että jokainen näppäinääni on vähintään 70ms pitkä ja eroa jokaisen äänen välissä on vähintään 40ms. Itse päädyin käyttämään ikkunoiden kokona 20 millisekuntia, sillä tämä takaa että painallusten välillä on vähintään yksi ”rauhallinen” ikkuna, eli ikkuna jossa ei ole lainkaan painallusten aiheuttamaa signaalia. Tämän ikkunan avulla painallukset voitaisiin erottaa toisistaan. Ohjelman perusidea on seuraavanlainen: äänisignaali käydään läpi 20 millisekuntin ikkunoissa. Jokaisen ikkunan kohdalla lasketaan ikkunan energia. Mikäli energiamäärä per millisekuntia ylittää kovakoodatun rajan (0.0001), käsitellään kyseinen ikkuna. Mikäli ikkuna halutaan käsitellä, lasketaan sen magnitudi ja frekvenssit, joilla ks. magnitudit ilmenevät. Mikäli prosessi visualisoitaisiin, saataisiin seuraavanlainen kuva:

magnitude_vs_freq.png

Kuvasta nähdään ne frekvenssit, joissa on suurin magnitudi. Nämä frekvenssit (tai tarkemmin, kaksi vasemmanpuolimmaista) ovat juuri ne frekvenssit, joiden avulla numeroita välitetään. Tämän jälkeen yksinkertaisesti etsitään kyseiset frekvenssin ja haetaan niitä vastaava numero. Ohjelma selviytyi hyvin annetusta äänisignaalista (”dtmf_81231H.wav”), mutta kun sitä ajettiin 12 testisignaalia vastaan, täysin oikein meni vain kuusi kahdestatoista signaalista, sekä melko lähelle kaksi. Ohjelmaa olisi mahdollista parantaa mm. säätämällä kovakoodattuja rajoja tarkemmiksi ja ottamalla painallusten kohdalla huomioon kaikki ks. painallusta koskevat 20 millisekunnin ikkunat, eikä vain ensimmäistä kuten tällä hetkellä.

